upstream ${DOCKERSKEL}_public {
  server ${DOCKERSKEL}:8081;
}

upstream ${DOCKERSKEL}_oai {
  server ${DOCKERSKEL}:8082;
}

upstream ${DOCKERSKEL}_staff {
  server ${DOCKERSKEL}:8080;
}

server {
  listen 80;
  listen [::]:80;
  server_name ${PUBLICSKEL};

  # letsencrypt webroot
  root /var/www/html;
  location ~ /.well-known {
    allow all;
  }

  server_tokens off;
  include includes/proxy.conf;

  location /oai {
    proxy_pass http://${DOCKERSKEL}_oai/;
  }

  location / {
    proxy_pass http://${DOCKERSKEL}_public/;
    return 301 https://$server_name$request_uri;
  }

}

server {
  listen 80;
  listen [::]:80;
  server_name ${STAFFSKEL};

  # letsencrypt webroot
  root /var/www/html;
  location ~ /.well-known {
    allow all;
  }

  server_tokens off;
  include includes/proxy.conf;

  location / {
    proxy_pass http://${DOCKERSKEL}_staff/;
    return 301 https://$server_name$request_uri;
  }
}


server {
# nginx version 1.19
  listen 443 ssl http2;

# nginx version 1.25.4
#  listen 443 ssl;
#  http2 on;

  server_name ${PUBLICSKEL};

  # letsencrypt webroot
  root /var/www/html;
  location ~ /.well-known {
    allow all;
  }

  ssl_certificate /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key /etc/nginx/ssl/server.key; 

  include includes/ssl-params.conf;
  include includes/proxy.conf;

  location /oai {
    proxy_pass http://${DOCKERSKEL}_oai/;
  }

  location / {
    proxy_pass http://${DOCKERSKEL}_public/;
  }
}

server {

# nginx version 1.19
  listen 443 ssl http2;

# nginx version 1.25.4
#  listen 443 ssl;
#  http2 on;

  server_name ${STAFFSKEL};

  # letsencrypt webroot
  root /var/www/html;
  location ~ /.well-known {
    allow all;
  }

  ssl_certificate /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key /etc/nginx/ssl/server.key; 

  include includes/ssl-params.conf;
  include includes/proxy.conf;

  location / {
    proxy_pass http://${DOCKERSKEL}_staff/;
  }
}

